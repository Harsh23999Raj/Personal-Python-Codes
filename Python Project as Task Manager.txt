import json

class TaskManager:
    def __init__(self, filename="tasks.json"):
        self.filename = filename
        self.tasks = self.load_tasks()

    def load_tasks(self):
        try:
            with open(self.filename, "r") as file:
                tasks = json.load(file)
        except (json.JSONDecodeError, FileNotFoundError):
            tasks = []
        return tasks

    def save_tasks(self):
        with open(self.filename, "w") as file:
            json.dump(self.tasks, file, indent=2)

    def display_tasks(self):
        if not self.tasks:
            print("No tasks found.")
        else:
            print("Tasks:")
            for idx, task in enumerate(self.tasks, 1):
                print(f"{idx}. {task['description']}")

    def add_task(self, description):
        task = {"description": description, "status": "Incomplete"}
        self.tasks.append(task)
        self.save_tasks()
        print("Task added successfully.")

    def mark_complete(self, task_index):
        if 1 <= task_index <= len(self.tasks):
            self.tasks[task_index - 1]["status"] = "Complete"
            self.save_tasks()
            print("Task marked as complete.")
        else:
            print("Invalid task index.")

def main():
    task_manager = TaskManager()

    while True:
        print("\nTask Management System")
        print("1. Display Tasks")
        print("2. Add Task")
        print("3. Mark Task as Complete")
        print("4. Exit")
        choice = input("Enter your choice (1-4): ")

        if choice == "1":
            task_manager.display_tasks()
        elif choice == "2":
            description = input("Enter task description: ")
            task_manager.add_task(description)
        elif choice == "3":
            task_manager.display_tasks()
            task_index = int(input("Enter the task index to mark as complete: "))
            task_manager.mark_complete(task_index)
        elif choice == "4":
            print("Exiting the program.")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
